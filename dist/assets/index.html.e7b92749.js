import{r as a,o as e,c as t,a as p,b as o,w as c,F as l,d as r,e as n}from"./app.34f2035c.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},d=r(`<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><p>Input this command in your terminal under the project folder to add the package to your project.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>dart pub add hetu_script
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Or use flutter version command:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>flutter pub add hetu_script
flutter pub add hetu_script_flutter
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="flutter-project" tabindex="-1"><a class="header-anchor" href="#flutter-project" aria-hidden="true">#</a> Flutter project</h2><p>To load a script file from assets, add the script file&#39;s path into your pubspec.yaml like other assets.</p><p>The default folder is &#39;scripts/&#39;, directly under your project root.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">assets</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> scripts/main.ht
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>You have to use the class <strong>HTAssetResourceContext</strong> provided by this package, to replace the default one:</p><p>Then use the new method on Hetu class: <strong>initFlutter</strong> to init instead the old method. Those scripts in assets will be pre-loaded. Note that this is an async function.</p><p>Then you can load a asset script file directly by <strong>evalFile</strong> method, you can omit the root part in the path:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> sourceContext <span class="token operator">=</span> <span class="token class-name">HTAssetResourceContext</span><span class="token punctuation">(</span>root<span class="token punctuation">:</span> <span class="token string">&#39;scripts/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span>sourceContext<span class="token punctuation">:</span> sourceContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">initFlutter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">final</span> result <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">evalFile</span><span class="token punctuation">(</span><span class="token string">&#39;main.ht&#39;</span><span class="token punctuation">,</span> invokeFunc<span class="token punctuation">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="file-system-and-module-import" tabindex="-1"><a class="header-anchor" href="#file-system-and-module-import" aria-hidden="true">#</a> File system and module import</h2><p>To handle module import from physical disk within the script. Install another package called: &#39;hetu_script_dev_tools&#39;.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>dart pub add hetu_script
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>You have to use the class <strong>HTFileSystemResourceContext</strong> provided by this package, to replace the default one:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;package:hetu_script/hetu_script.dart&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;package:hetu_script_dev_tools/hetu_script_dev_tools.dart&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> sourceContext <span class="token operator">=</span> <span class="token class-name">HTFileSystemResourceContext</span><span class="token punctuation">(</span>root<span class="token punctuation">:</span> <span class="token string">&#39;../../script/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span>sourceContext<span class="token punctuation">:</span> sourceContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
  hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">final</span> result <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">evalFile</span><span class="token punctuation">(</span><span class="token string">&#39;import_test1.ht&#39;</span><span class="token punctuation">,</span> invokeFunc<span class="token punctuation">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>content in &#39;import_test1.ht&#39;:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;hello.ht&#39;</span> <span class="token keyword">as</span> h

fun main <span class="token punctuation">{</span>
  <span class="token keyword">return</span> h<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>content in &#39;hello.ht&#39;:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fun hello <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;Hello, world!&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,22),k=n("This package also provided a "),m=n("REPL tool"),b=n(" for quick testing.");function h(g,v){const s=a("RouterLink");return e(),t(l,null,[d,p("p",null,[k,o(s,{to:"/docs/en-US/command_line_tool/#REPL"},{default:c(()=>[m]),_:1}),b])],64)}var x=i(u,[["render",h]]);export{x as default};
