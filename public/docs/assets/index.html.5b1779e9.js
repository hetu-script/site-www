import{f as n}from"./app.daf41253.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="\u5F02\u6B65\u64CD\u4F5C-future" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u64CD\u4F5C-future" aria-hidden="true">#</a> \u5F02\u6B65\u64CD\u4F5C\uFF08Future\uFF09</h1><p>\u6CB3\u56FE\u811A\u672C\u662F\u5B8C\u5168\u540C\u6B65\u7684\uFF0C\u4E5F\u4E0D\u652F\u6301 async/await \u8BED\u6CD5\u3002</p><p>\u4F46\u6CB3\u56FE\u811A\u672C\u6709\u53EF\u80FD\u83B7\u5F97\u4E00\u4E2A Dart \u4E2D\u7684 Future \u5BF9\u8C61\u3002\u4E3A\u4E86\u65B9\u4FBF\u8D77\u89C1\uFF0C\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u5C01\u88C5\uFF0C\u8BA9\u811A\u672C\u53EF\u4EE5\u548C Future \u4EA4\u4E92\u3002</p><p>\u4F60\u53EF\u4EE5\u5728\u811A\u672C\u4E2D\u901A\u8FC7 then() \u6765\u4F20\u9012\u4E00\u4E2A\u811A\u672C\u4E2D\u7684\u51FD\u6570\uFF0C\u5B83\u5C06\u4F1A\u5728\u8FD9\u4E2A Future \u5B8C\u6210\u540E\u88AB\u6267\u884C\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:hetu_script/hetu_script.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">void</span><span class="token punctuation">&gt;</span></span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Imagine that this function is fetching user info from another service or database.</span>
  <span class="token keyword">return</span> <span class="token class-name">Future</span><span class="token punctuation">.</span><span class="token function">delayed</span><span class="token punctuation">(</span>
      <span class="token keyword">const</span> <span class="token class-name">Duration</span><span class="token punctuation">(</span>seconds<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello world after 2 seconds!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalFunctions<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;fetch&#39;</span></span><span class="token punctuation">:</span> fetch<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hetu<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">r&#39;&#39;&#39;
      external fun fetch
      final future = fetch()
      future.then((value) {
        print(&#39;future completed!&#39;)
      })
  &#39;&#39;&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,5);function p(e,c){return t}var l=s(a,[["render",p]]);export{l as default};
