import{f as n}from"./app.4f14c345.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<h1 id="\u7279\u6B8A\u8BED\u6CD5\u548C\u6807\u8BC6\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7279\u6B8A\u8BED\u6CD5\u548C\u6807\u8BC6\u7B26" aria-hidden="true">#</a> \u7279\u6B8A\u8BED\u6CD5\u548C\u6807\u8BC6\u7B26</h1><h2 id="\u5C55\u5F00\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C55\u5F00\u8BED\u6CD5" aria-hidden="true">#</a> \u5C55\u5F00\u8BED\u6CD5</h2><p>\u4F60\u53EF\u4EE5\u5728\u4E09\u79CD\u573A\u5408\u4F7F\u7528\u5C55\u5F00\uFF08&#39;...&#39;\uFF09\uFF1A</p><h3 id="\u51FD\u6570\u8C03\u7528\u65F6\u7684\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8C03\u7528\u65F6\u7684\u53C2\u6570" aria-hidden="true">#</a> \u51FD\u6570\u8C03\u7528\u65F6\u7684\u53C2\u6570</h3><p>\u4F60\u53EF\u4EE5\u5C06\u4E00\u4E2A Iterable \u5C55\u5F00\u540E\u4F5C\u4E3A\u4F4D\u7F6E\u53C2\u6570\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u7684\u53C2\u6570\u5217\u8868\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fun <span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token operator">...</span>list<span class="token punctuation">)</span> <span class="token comment">// same to &#39;someFunc(5, 6)&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5217\u8868\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5217\u8868\u5B57\u9762\u91CF" aria-hidden="true">#</a> \u5217\u8868\u5B57\u9762\u91CF</h3><p>\u4F60\u53EF\u4EE5\u5728\u5B9A\u4E49\u4E00\u4E2A\u5217\u8868\u5B57\u9762\u91CF\u65F6\u5C55\u5F00\u53E6\u4E00\u4E2A\u5217\u8868\uFF0C\u5C06\u5176\u6210\u5458\u586B\u5145\u8FDB\u53BB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ht <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">...</span>list<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// same to [1, 2, 3, 4, 5, 6]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u7ED3\u6784\u4F53-struct-\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53-struct-\u5B57\u9762\u91CF" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\uFF08struct\uFF09\u5B57\u9762\u91CF</h3><p>\u4F60\u53EF\u4EE5\u5728\u5B9A\u4E49\u4E00\u4E2A\u7ED3\u6784\u4F53\u5B57\u9762\u91CF\u65F6\u5C55\u5F00\u53E6\u4E00\u4E2A\u7ED3\u6784\u4F53\uFF0C\u5C06\u5176\u6210\u5458\u586B\u5145\u8FDB\u53BB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">familyName</span><span class="token operator">:</span> <span class="token string">&#39;Hord&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Luk&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> job <span class="token operator">=</span> <span class="token string">&#39;wood cutter&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>name<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// same to:</span>
<span class="token comment">// {</span>
<span class="token comment">//   familyName: &#39;Hord&#39;,</span>
<span class="token comment">//   firstName: &#39;Luk&#39;,</span>
<span class="token comment">//   age: 23,</span>
<span class="token comment">//   job: &#39;wood cutter&#39;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u7A7A\u503C\u68C0\u67E5" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u503C\u68C0\u67E5" aria-hidden="true">#</a> \u7A7A\u503C\u68C0\u67E5</h2><p>\u76EE\u524D\u6CB3\u56FE\u6CA1\u6709\u4F7F\u7528 \u201C\u7A7A\u5B89\u5168\u201D \u7684\u8BBE\u5B9A\u3002\u4F46\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E9B\u8BED\u6CD5\u6765\u8FDB\u884C\u5FEB\u901F\u7684\u7A7A\u503C\u68C0\u67E5\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> a <span class="token comment">// a is null</span>
<span class="token comment">// Nullable member get:</span>
<span class="token keyword">final</span> value <span class="token operator">=</span> a<span class="token operator">?</span><span class="token punctuation">.</span>value <span class="token comment">// value is null and we won&#39;t get errors</span>
<span class="token keyword">final</span> result <span class="token operator">=</span> a<span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// nullabla function call</span>
<span class="token comment">// If null then get another value</span>
<span class="token keyword">final</span> text <span class="token operator">=</span> a <span class="token operator">?</span><span class="token operator">?</span> <span class="token string-literal"><span class="token string">&#39;hi!&#39;</span></span> <span class="token comment">// text is &#39;hi!&#39;</span>
<span class="token comment">// If null then assign</span>
a <span class="token operator">?</span><span class="token operator">?</span><span class="token operator">=</span> <span class="token number">42</span>
<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// a is 42 now</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u7A7A\u503C\u68C0\u67E5\u5177\u6709\u4F20\u9012\u6027\u3002&#39;?&#39;\u4E4B\u540E\u7684\u6240\u6709\u53EF\u4EE5\u8FDB\u884C\u63A7\u5236\u68C0\u67E5\u7684\u8868\u8FBE\u5F0F\u90FD\u4F1A\u9ED8\u8BA4\u5141\u8BB8\u7A7A\u503C\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> a <span class="token comment">// a is null</span>
<span class="token keyword">final</span> value <span class="token operator">=</span> a<span class="token operator">?</span><span class="token punctuation">.</span>collection<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// value is null and we won&#39;t get errors</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u64CD\u4F5C\u7B26\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7B26\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u64CD\u4F5C\u7B26\u4F18\u5148\u7EA7</h2><p>\u6CB3\u56FE\u4E2D\u7684\u64CD\u4F5C\u7B26\u4F18\u5148\u7EA7\u662F Dart \u7684\u64CD\u4F5C\u7B26\u4F18\u5148\u7EA7\u8868\u7684\u4E00\u4E2A\u5B50\u96C6\u3002</p><table><thead><tr><th style="text-align:left;">Description</th><th style="text-align:left;">Operator</th><th style="text-align:center;">Associativity</th><th style="text-align:center;">Precedence</th></tr></thead><tbody><tr><td style="text-align:left;">Unary postfix</td><td style="text-align:left;">e., e?., e++, e--, e1[e2], e()</td><td style="text-align:center;">None</td><td style="text-align:center;">16</td></tr><tr><td style="text-align:left;">Unary prefix</td><td style="text-align:left;">-e, !e, ++e, --e</td><td style="text-align:center;">None</td><td style="text-align:center;">15</td></tr><tr><td style="text-align:left;">Multiplicative</td><td style="text-align:left;">*, /, ~/, %</td><td style="text-align:center;">Left</td><td style="text-align:center;">14</td></tr><tr><td style="text-align:left;">Additive</td><td style="text-align:left;">+,</td><td style="text-align:center;">Left</td><td style="text-align:center;">13</td></tr><tr><td style="text-align:left;">Relational</td><td style="text-align:left;">&lt;, &gt;, &lt;=, &gt;=, as, is, is!, in, in!</td><td style="text-align:center;">None</td><td style="text-align:center;">8</td></tr><tr><td style="text-align:left;">Equality</td><td style="text-align:left;">==, !=</td><td style="text-align:center;">None</td><td style="text-align:center;">7</td></tr><tr><td style="text-align:left;">Logical AND</td><td style="text-align:left;">&amp;&amp;</td><td style="text-align:center;">Left</td><td style="text-align:center;">6</td></tr><tr><td style="text-align:left;">Logical Or</td><td style="text-align:left;">||</td><td style="text-align:center;">Left</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:left;">If null</td><td style="text-align:left;">??</td><td style="text-align:center;">Left</td><td style="text-align:center;">4</td></tr><tr><td style="text-align:left;">Conditional</td><td style="text-align:left;">e1 ? e2 : e3</td><td style="text-align:center;">Right</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:left;">Assignment</td><td style="text-align:left;">=, *=, /=, ~/=, +=, -=, ??=</td><td style="text-align:center;">Right</td><td style="text-align:center;">1</td></tr></tbody></table>`,20);function e(p,l){return t}var c=s(a,[["render",e]]);export{c as default};
