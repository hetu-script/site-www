import{r as t,o as c,c as l,b as n,e as a,w as u,F as r,f as e,d as s}from"./app.fb854eb5.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const k={},b=e(`<h1 id="\u548C-dart-\u4EE3\u7801\u7684\u4EA4\u4E92" tabindex="-1"><a class="header-anchor" href="#\u548C-dart-\u4EE3\u7801\u7684\u4EA4\u4E92" aria-hidden="true">#</a> \u548C Dart \u4EE3\u7801\u7684\u4EA4\u4E92</h1><p>\u5728\u811A\u672C\u4E2D\u53EF\u4EE5\u7528\u4E09\u79CD\u65B9\u5F0F\u548C Dart \u4EE3\u7801\u8FDB\u884C\u4EA4\u4E92\uFF1A\u5185\u7F6E\u7C7B\uFF0CJson \u548C\u7ED1\u5B9A\u3002\u8FD9\u4E09\u79CD\u65B9\u6CD5\u5404\u6709\u4F18\u52A3\uFF0C\u53EF\u4EE5\u6839\u636E\u5B9E\u9645\u9700\u6C42\u9009\u62E9\u3002</p><h2 id="\u548C-dart-\u4F20\u9012\u503C" tabindex="-1"><a class="header-anchor" href="#\u548C-dart-\u4F20\u9012\u503C" aria-hidden="true">#</a> \u548C Dart \u4F20\u9012\u503C</h2><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <strong>invoke()</strong> \u63A5\u53E3\u7684\u53C2\u6570\u6765\u5411\u811A\u672C\u51FD\u6570\u4F20\u9012\u503C\u3002\u811A\u672C\u4F1A\u5C06\u8FD9\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u76F4\u63A5\u8FD4\u56DE\u5230 Dart \u8FD9\u8FB9\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> result <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;calculate&#39;</span></span><span class="token punctuation">,</span> positionalArgs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> namedArgs<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;isFloat&#39;</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// equivalent in script</span>
<span class="token comment">// final result = calculate(6, 7, isFloat: true)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u5185\u7F6E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5185\u7F6E\u7C7B" aria-hidden="true">#</a> \u5185\u7F6E\u7C7B</h2><p>\u6CB3\u56FE\u5DF2\u7ECF\u5185\u7F6E\u4E0B\u9762\u8FD9\u4E9B\u7C7B\u7684\u7ED1\u5B9A\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u76F4\u63A5\u5728\u811A\u672C\u4E2D\u4F20\u9012\u3001\u4FEE\u6539\u8FD9\u4E9B\u5BF9\u8C61\uFF1A</p><ul><li>null</li><li>bool</li><li>int</li><li>double (it is called float in the script)</li><li>String (it is called str in the script)</li><li>List&lt;dynamic&gt;</li><li>Set&lt;dynamic&gt;</li><li>Map&lt;dynamic, dynamic&gt;</li><li>Function</li></ul><p>\u4F60\u53EF\u4EE5\u76F4\u63A5\u5728\u811A\u672C\u4E2D\u4F7F\u7528 <strong>[]</strong> \u8BED\u6CD5\u6765\u8BBF\u95EE\u548C\u4FEE\u6539 Dart \u4E2D\u7684 <strong>List, Map</strong> \u5BF9\u8C61\u3002\u4E5F\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 <strong>()</strong> \u6765\u8C03\u7528 Dart \u4E2D\u7684\u51FD\u6570\u3002</p><h2 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> Json</h2><p>\u811A\u672C\u4E2D\u7684\u5BF9\u8C61\u5B57\u9762\u91CF\uFF0C\u5728 Dart \u4E2D\u4F53\u73B0\u4E3A <strong>HTStruct</strong> \u5BF9\u8C61\u3002\u8FD9\u4E2A\u5BF9\u8C61\u5728 Dart \u4E2D\u53EF\u4EE5\u50CF Map \u90A3\u6837\u76F4\u63A5\u4F7F\u7528 <strong>[]</strong> \u6765\u4FEE\u6539\u5176\u6210\u5458\u3002\u5728\u811A\u672C\u4E2D\u5219\u5177\u6709 <strong>toJson()</strong> \u548C <strong>fromJson()</strong> \u63A5\u53E3\u3002\u56E0\u6B64\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u5BF9\u8C61\u6765\u5728 Dart \u548C\u811A\u672C\u4E4B\u95F4\u4F20\u9012\u6570\u503C\u3002</p><p>\u4F8B\u5982\u6211\u4EEC\u5728\u811A\u672C\u4E2D\u6709\u5982\u4E0B\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token keyword">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> book <span class="token operator">=</span> prototype<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span><span class="token keyword">data</span><span class="token punctuation">)</span>
  <span class="token function">print</span><span class="token punctuation">(</span>book<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728 Dart \u4EE3\u7801\u4E2D\u6709\u5982\u4E0B\u5B9A\u4E49\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&#39;id&#39;</span></span><span class="token punctuation">:</span> <span class="token number">324</span><span class="token punctuation">,</span>
  <span class="token string-literal"><span class="token string">&#39;title&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Catcher in the Rye&#39;</span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
hetu<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;main&#39;</span></span><span class="token punctuation">,</span> positionalArgs<span class="token punctuation">:</span> <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u6211\u4EEC\u5C06\u4F1A\u5728 Dart \u4E2D\u83B7\u5F97\u4E0B\u9762\u7684\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">324</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Catcher in the Rye&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A" aria-hidden="true">#</a> \u7ED1\u5B9A</h2><p>\u4F7F\u7528\u5185\u7F6E\u7C7B\u548C\u5BF9\u8C61\u5B57\u9762\u91CF\u6765\u4F20\u9012\u503C\u6BD4\u8F83\u7B80\u5355\u5FEB\u6377\u3002\u4F46\u5982\u679C\u4F60\u60F3\u8981\u4F7F\u7528 Dart \u4E2D\u7684\u5DF2\u6709\u7C7B\u5B9A\u4E49\uFF0C\u6216\u8005\u60F3\u8981\u8C03\u7528 Dart \u51FD\u6570\uFF0C\u5219\u9700\u8981\u901A\u8FC7<strong>\u7ED1\u5B9A</strong>\u7684\u65B9\u5F0F\u3002</p><h3 id="\u5916\u90E8\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u51FD\u6570" aria-hidden="true">#</a> \u5916\u90E8\u51FD\u6570</h3><p>\u4F60\u53EF\u4EE5\u76F4\u63A5\u5C06\u4EFB\u610F Dart \u51FD\u6570\u7ED1\u5B9A\u5230\u811A\u672C\u4E2D\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalFunctions<span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&#39;hello&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;greeting&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;hello&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u6837\u5199\u6BD4\u8F83\u7B80\u660E\u6613\u61C2\uFF0C\u4F46\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\u5B9A\u4E49\u7684\u5916\u90E8\u51FD\u6570\u7ED1\u5B9A\uFF0C\u5C06\u4F1A\u4F7F\u7528 Dart \u4E2D\u7684 <strong>Function.apply</strong> \u529F\u80FD\u8C03\u7528\uFF0C\u76F8\u6BD4\u76F4\u63A5\u8C03\u7528\uFF0C\u8FD9\u4E2A\u529F\u80FD\u7684\u8FD0\u884C\u6548\u7387\u901A\u5E38\u6BD4\u8F83\u4F4E\u4E0B\uFF08\u5927\u7EA6\u6162 10 \u500D\u5DE6\u53F3\uFF09\u3002\u56E0\u6B64\uFF0C\u5EFA\u8BAE\u4EE5\u5982\u4E0B\u5F62\u5F0F\u5B9A\u4E49\u4E00\u4E2A\u5916\u90E8\u51FD\u6570\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalFunctions<span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&#39;hello&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>entity<span class="token punctuation">,</span> <span class="token punctuation">{</span>positionalArgs<span class="token punctuation">,</span> namedArgs<span class="token punctuation">,</span> typeArgs<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;greeting&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;hello&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5305\u542B\u7C7B\u578B\u7684\u5916\u90E8\u51FD\u6570\u5B8C\u6574\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">/// typedef of external function for binding.</span>
<span class="token keyword">typedef</span> <span class="token class-name">HTExternalFunction</span> <span class="token operator">=</span> <span class="token keyword">dynamic</span> <span class="token class-name">Function</span><span class="token punctuation">(</span>
    <span class="token class-name">HTEntity</span> entity<span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> positionalArgs<span class="token punctuation">,</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> namedArgs<span class="token punctuation">,</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HTType</span><span class="token punctuation">&gt;</span></span> typeArgs<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8981\u4F7F\u7528\u4F60\u521A\u624D\u5B9A\u4E49\u7684\u5916\u90E8\u51FD\u6570\uFF0C\u9700\u8981\u5728\u811A\u672C\u4E2D\u4F7F\u7528 <strong>external</strong> \u5173\u952E\u5B57\u58F0\u660E\u8FD9\u4E2A\u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7ED1\u5B9A\u5E76\u4F7F\u7528\u5916\u90E8\u51FD\u6570\u7684\u5B8C\u6574\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;package:hetu_script/hetu_script.dart&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> async <span class="token punctuation">{</span>
  final hetu <span class="token operator">=</span> <span class="token function">Hetu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalFunctions<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;hello&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span>HTEntity entity<span class="token punctuation">,</span>
        <span class="token punctuation">{</span>List<span class="token operator">&lt;</span>dynamic<span class="token operator">&gt;</span> positionalArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> dynamic<span class="token operator">&gt;</span> namedArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            List<span class="token operator">&lt;</span>HTTypeId<span class="token operator">&gt;</span> typeArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;greeting&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Hello from Dart!&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  final hetuValue <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span>r<span class="token string">&#39;&#39;</span>&#39;
      external fun hello
      <span class="token keyword">var</span> dartValue <span class="token operator">=</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      dartValue<span class="token punctuation">[</span><span class="token string">&#39;reply&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hi, this is Hetu.&#39;</span>
      dartValue <span class="token comment">// the script will return the value of it&#39;s last expression</span>
      <span class="token string">&#39;&#39;</span>&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;hetu value: $hetuValue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E0A\u9762\u7684\u7A0B\u5E8F\u7684\u8F93\u51FA\u7ED3\u679C\u662F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>hetu value: {&#39;greeting&#39;: &#39;Hello from Dart!&#39;, &#39;reply&#39;: &#39;Hi, this is Hetu.&#39;}
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u7ED1\u5B9A\u4E00\u4E2A\u5916\u90E8\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A\u4E00\u4E2A\u5916\u90E8\u65B9\u6CD5" aria-hidden="true">#</a> \u7ED1\u5B9A\u4E00\u4E2A\u5916\u90E8\u65B9\u6CD5</h3><p>\u4F60\u53EF\u4EE5\u5728\u811A\u672C\u4E2D\u7684\u7C7B\u5B9A\u4E49\u4E2D\uFF0C\u5B9A\u4E49\u5916\u90E8\u65B9\u6CD5\uFF08\u5916\u90E8\u6210\u5458\u51FD\u6570\uFF09\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Someone</span> <span class="token punctuation">{</span>
  <span class="token keyword">external</span> fun calculate
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9\u4E8E\u811A\u672C\u7C7B\u4E2D\u7684\u5916\u90E8\u6210\u5458\u51FD\u6570\uFF0C\u5728 Dart \u4FA7\u7684\u5B9A\u4E49\u548C\u666E\u901A\u51FD\u6570\u4E00\u6837\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">dynamic</span> <span class="token function">calculate</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token punctuation">{</span>positionalArgs<span class="token punctuation">,</span> namedArgs<span class="token punctuation">,</span> typeArgs<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do somthing about the object</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F46\u5728\u7ED1\u5B9A\u65F6\uFF0C\u7EA6\u5B9A\u4F7F\u7528 className.funcName \u7684\u5F62\u5F0F\u4F5C\u4E3A\u7ED1\u5B9A\u540D\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">// the key of this external method have to be in the form of &#39;className.methodName&#39;</span>
hetu<span class="token punctuation">.</span><span class="token function">bindExternalFunction</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Someone.calculate&#39;</span></span><span class="token punctuation">,</span> calculate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7136\u540E\u5728\u811A\u672C\u4E2D\uFF0C\u5916\u90E8\u65B9\u6CD5\u5C31\u53EF\u4EE5\u548C\u666E\u901A\u811A\u672C\u51FD\u6570\u4E00\u6837\u4F7F\u7528\u4E86\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> ss <span class="token operator">=</span> <span class="token class-name">Someone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ss<span class="token punctuation">.</span><span class="token function">calculate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5BF9\u4E8E\u547D\u540D\u6784\u9020\u4F53\uFF08named struct\uFF09\uFF0C\u53EF\u4EE5\u4F7F\u7528\u76F8\u540C\u7684\u65B9\u5F0F\u6765\u7ED1\u5B9A\u5916\u90E8\u6210\u5458\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>struct Person <span class="token punctuation">{</span>
  external fun sing
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u5916\u90E8\u7C7B\u7ED1\u5B9A\u7684\u5B9A\u4E49\u548C\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u7C7B\u7ED1\u5B9A\u7684\u5B9A\u4E49\u548C\u58F0\u660E" aria-hidden="true">#</a> \u5916\u90E8\u7C7B\u7ED1\u5B9A\u7684\u5B9A\u4E49\u548C\u58F0\u660E</h3><p>\u4F60\u53EF\u4EE5\u5728\u811A\u672C\u4E2D\u5B9A\u4E49\u4E00\u4E2A\u5916\u90E8\u7C7B\uFF0C\u7136\u540E\u901A\u8FC7\u7ED1\u5B9A\u7684\u65B9\u5F0F\u6765\u8BBF\u95EE\u5B83\u7684\u9759\u6001\u6210\u5458\u6216\u8005\u5B9E\u4F8B\u6210\u5458\u3002</p><p>\u5916\u90E8\u7C7B\u7684\u7ED1\u5B9A\u5305\u542B\u4E0B\u9762\u56DB\u90E8\u5206\u7684\u4EE3\u7801\uFF1A</p>`,45),m=n("li",null,[n("p",null,"\u4E00\u4E2A Dart class \u7684\u58F0\u660E\u3002\u8FD9\u90E8\u5206\u662F\u7EAF\u7CB9\u7684 Dart\u3002\u901A\u5E38\u4F60\u5DF2\u7ECF\u5199\u597D\u4E86\u8FD9\u90E8\u5206\u4EE3\u7801\uFF0C\u800C\u4E14\u4E5F\u65E0\u987B\u4F5C\u4EFB\u4F55\u4FEE\u6539\u3002")],-1),d=s("\u4F60\u9700\u8981\u5199\u4E00\u4E2A\u9488\u5BF9\u8FD9\u4E2A Dart class \u7684 "),g={href:"https://dart.dev/guides/language/extension-methods",target:"_blank",rel:"noopener noreferrer"},y=s("extension"),h=s("\uFF0C\u63D0\u4F9B\u4E24\u4E2A\u65B9\u6CD5\uFF1A"),v=n("strong",null,"htFetch \u548C htAssign",-1),w=s("\u3002 \u8FD9\u662F\u4E3A\u4E86\u8BA9\u89E3\u91CA\u5668\u53EF\u4EE5\u4EE5\u67D0\u79CD\u7C7B\u4F3C\u53CD\u5C04\u7684\u65B9\u6CD5\u83B7\u53D6 Dart \u5BF9\u8C61\u7684\u6210\u5458\u3002"),f=s("\u4F60\u9700\u8981\u901A\u8FC7\u7EE7\u627F "),x=n("strong",null,"HTExternalClass",-1),_=s(" \u7C7B\u5B9A\u4E49\u4E00\u4E2A\u5916\u90E8\u7C7B\uFF0C\u5305\u542B "),A=n("strong",null,"memberGet, memberSet, instanceMemberGet, instanceMemberSet",-1),T=s(" \u7B49\u51FD\u6570\u3002\u8FD9\u4E2A\u5916\u90E8\u7C7B\u9700\u8981\u4F7F\u7528\u89E3\u91CA\u5668\u7684 "),H=n("strong",null,"bindExternalClass()",-1),P=s(" \u65B9\u6CD5\u8FDB\u884C\u7ED1\u5B9A\uFF0C\u4ECE\u800C\u8BA9\u89E3\u91CA\u5668\u53EF\u4EE5\u8BBF\u95EE\u8FD9\u4E2A\u7C7B\u7684\u9759\u6001\u6210\u5458\uFF0C\u4EE5\u53CA\u5176\u6784\u9020\u51FD\u6570\u3002"),F=n("li",null,[n("p",null,[s("\u4F60\u8FD8\u9700\u8981\u5728\u811A\u672C\u4E2D\u4F7F\u7528 "),n("strong",null,"external"),s(" \u5173\u952E\u5B57\u58F0\u660E\u8FD9\u4E2A\u7C7B\u548C\u5176\u6210\u5458\u3002\u8FD9\u53EF\u4EE5\u8BA9\u811A\u672C\u672C\u8EAB\u8FDB\u884C\u8BED\u6CD5\u68C0\u67E5\u3001\u51FD\u6570\u53C2\u6570\u8D4B\u521D\u503C\u7B49\u3002")])],-1),S=e(`<p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5B9A\u4E49\u5E76\u4F7F\u7528\u4E00\u4E2A\u5916\u90E8\u7C7B\u7684\u5B8C\u6574\u4F8B\u5B50\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:hetu_script/hetu_script.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:hetu_script/binding.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> races <span class="token operator">=</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;Caucasian&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token class-name">String</span> _level <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;0&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token keyword">get</span> level <span class="token operator">=</span><span class="token operator">&gt;</span> _level<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">set</span> <span class="token function">level</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> _level <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">meaning</span><span class="token punctuation">(</span>int n<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string-literal"><span class="token string">&#39;The meaning of life is </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">n</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>

  <span class="token class-name">String</span> <span class="token keyword">get</span> child <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string-literal"><span class="token string">&#39;Tom&#39;</span></span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> name<span class="token punctuation">;</span>
  <span class="token class-name">String</span> race<span class="token punctuation">;</span>

  <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Jimmy&#39;</span></span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>race <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Caucasian&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>race <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Caucasian&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token class-name">String</span> tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hi! </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">tag</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">extension</span> <span class="token class-name">PersonBinding</span> <span class="token keyword">on</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token keyword">dynamic</span> <span class="token function">htFetch</span><span class="token punctuation">(</span><span class="token class-name">String</span> varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;name&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;race&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> race<span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;greeting&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">HTEntity</span> entity<span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> positionalArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> namedArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HTType</span><span class="token punctuation">&gt;</span></span> typeArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
            <span class="token function">greeting</span><span class="token punctuation">(</span>positionalArgs<span class="token punctuation">.</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;child&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> child<span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">undefined</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">void</span> <span class="token function">htAssign</span><span class="token punctuation">(</span><span class="token class-name">String</span> varName<span class="token punctuation">,</span> <span class="token keyword">dynamic</span> varValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;name&#39;</span></span><span class="token punctuation">:</span>
        name <span class="token operator">=</span> varValue<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;race&#39;</span></span><span class="token punctuation">:</span>
        race <span class="token operator">=</span> varValue<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">undefined</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">PersonClassBinding</span> <span class="token keyword">extends</span> <span class="token class-name">HTExternalClass</span> <span class="token punctuation">{</span>
  <span class="token class-name">PersonClassBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Person&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">dynamic</span> <span class="token function">memberGet</span><span class="token punctuation">(</span><span class="token class-name">String</span> varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">HTEntity</span> entity<span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> positionalArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> namedArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HTType</span><span class="token punctuation">&gt;</span></span> typeArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
            <span class="token class-name">Person</span><span class="token punctuation">(</span>positionalArgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> positionalArgs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.withName&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">HTEntity</span> entity<span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> positionalArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> namedArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HTType</span><span class="token punctuation">&gt;</span></span> typeArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
            <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">withName</span><span class="token punctuation">(</span>positionalArgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span>positionalArgs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> positionalArgs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Caucasion&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.meaning&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">HTEntity</span> entity<span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> positionalArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">dynamic</span><span class="token punctuation">&gt;</span></span> namedArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HTType</span><span class="token punctuation">&gt;</span></span> typeArgs <span class="token operator">=</span> <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span>
            <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token function">meaning</span><span class="token punctuation">(</span>positionalArgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.level&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">undefined</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">memberSet</span><span class="token punctuation">(</span><span class="token class-name">String</span> varName<span class="token punctuation">,</span> <span class="token keyword">dynamic</span> varValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.race&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">immutable</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.level&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>level <span class="token operator">=</span> varValue<span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">undefined</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">dynamic</span> <span class="token function">instanceMemberGet</span><span class="token punctuation">(</span><span class="token keyword">dynamic</span> object<span class="token punctuation">,</span> <span class="token class-name">String</span> varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> object <span class="token operator">as</span> <span class="token class-name">Person</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> i<span class="token punctuation">.</span><span class="token function">htFetch</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">void</span> <span class="token function">instanceMemberSet</span><span class="token punctuation">(</span><span class="token keyword">dynamic</span> object<span class="token punctuation">,</span> <span class="token class-name">String</span> varName<span class="token punctuation">,</span> <span class="token keyword">dynamic</span> varValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> object <span class="token operator">as</span> <span class="token class-name">Person</span><span class="token punctuation">;</span>
    i<span class="token punctuation">.</span><span class="token function">htAssign</span><span class="token punctuation">(</span>varName<span class="token punctuation">,</span> varValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalClasses<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">PersonClassBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hetu<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;&#39;&#39;
      external class Person {
        var race: str
        construct([name: str = &#39;Jimmy&#39;, race: str = &#39;Caucasian&#39;]);
        get child
        static fun meaning(n: num)
        static get level
        static set level (value: str)
        construct withName(name: str, [race: str = &#39;Caucasian&#39;])
        var name
        fun greeting(tag: str)
      }
      fun main {
        var p1: Person = Person()
        p1.greeting(&#39;jimmy&#39;)
        print(Person.meaning(42))
        print(typeof p1)
        print(p1.name)
        print(p1.child)
        print(&#39;My race is&#39;, p1.race)
        p1.race = &#39;Reptile&#39;
        print(&#39;Oh no! My race turned into&#39;, p1.race)
        Person.level = &#39;3&#39;
        print(Person.level)

        var p2 = Person.withName(&#39;Jimmy&#39;)
        print(p2.name)
        p2.name = &#39;John&#39;
      }
      &#39;&#39;&#39;</span></span><span class="token punctuation">,</span> isModule<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> invokeFunc<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;main&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br></div></div><h4 id="\u5916\u90E8-getter" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8-getter" aria-hidden="true">#</a> \u5916\u90E8 Getter</h4><p>Getter \u662F\u7528\u6765\u8BBF\u95EE\u5BF9\u8C61\u5C5E\u6027\u7684\u7279\u6B8A\u51FD\u6570\u3002\u5BF9\u4E8E\u6B64\u79CD\u51FD\u6570\uFF0C\u4F60\u65E0\u987B\u5728 <strong>external class binding</strong> \u6216\u8005 <strong>extension on instance</strong> \u4E0A\u5B9A\u4E49\u5B8C\u6574\u7684\u51FD\u6570\uFF0C\u800C\u53EA\u9700\u76F4\u63A5\u8FD4\u56DE\u5176\u5BF9\u5E94\u7684\u503C\u5373\u53EF\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">PersonClassBinding</span> <span class="token keyword">extends</span> <span class="token class-name">HTExternalClass</span> <span class="token punctuation">{</span>
  <span class="token class-name">PersonClassBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Person&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token keyword">dynamic</span> <span class="token function">memberGet</span><span class="token punctuation">(</span><span class="token class-name">String</span> varName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string-literal"><span class="token string">&#39;Person.level&#39;</span></span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token class-name">Person</span><span class="token punctuation">.</span>level<span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
        <span class="token keyword">throw</span> <span class="token class-name">HTError</span><span class="token punctuation">.</span><span class="token function">undefined</span><span class="token punctuation">(</span>varName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u90E8\u5206\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u90E8\u5206\u7ED1\u5B9A" aria-hidden="true">#</a> \u90E8\u5206\u7ED1\u5B9A</h4><p>\u4F60\u65E0\u9700\u8BA9\u6BCF\u4E2A\u7ED1\u5B9A\u5B9A\u4E49\u90FD\u5B8C\u5168\u5305\u542B\u4E0A\u8FF0\u7684\u56DB\u4E2A\u90E8\u5206\u3002</p><ul><li><p>\u5982\u679C\u4F60\u53EA\u5B9A\u4E49\u4E86\u5916\u90E8\u7C7B\uFF08external class binding\uFF09\uFF0C\u5E76\u6CA1\u6709\u5B9A\u4E49\u5BF9\u8C61\u6269\u5C55\u65B9\u6CD5\uFF08extension on instance\uFF09\uFF0C\u8FD9\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u5728\u811A\u672C\u4E2D<strong>\u4EE5 className.memberName \u7684\u5F62\u5F0F\u8BBF\u95EE\u7C7B\u9759\u6001\u6210\u5458</strong>\u3002</p></li><li><p>\u5982\u679C\u4F60\u5728\u5916\u90E8\u7C7B\u4E2D\u4E0D\u5B9A\u4E49 memberGet \u548C memberSet\uFF0C\u800C\u53EA\u5B9A\u4E49 instanceMemberGet \u548C instanceMemberSet\uFF0C\u8FD9\u6837\u4F60\u53EF\u4EE5\u5728\u811A\u672C\u4E2D\u76F4\u63A5\u4F7F\u7528\u8FD9\u4E2A Dart \u5BF9\u8C61\uFF0C\u53EA\u662F<strong>\u4E0D\u80FD\u901A\u8FC7\u6784\u9020\u51FD\u6570\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61\uFF0C\u6216\u8005\u8BBF\u95EE\u9759\u6001\u6210\u5458</strong>\u3002</p></li></ul><h3 id="dart-\u51FD\u6570\u89E3\u5305\u88C5\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#dart-\u51FD\u6570\u89E3\u5305\u88C5\u5B9A\u4E49" aria-hidden="true">#</a> Dart \u51FD\u6570\u89E3\u5305\u88C5\u5B9A\u4E49</h3><p>\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u4F60\u53EF\u80FD\u5E0C\u671B\u5C06\u4E00\u4E2A\u811A\u672C\u51FD\u6570\uFF0C\u5F53\u4F5C\u666E\u901A\u7684 Dart \u51FD\u6570\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9\u53E6\u4E00\u4E2A Dart \u51FD\u6570\uFF08\u4F8B\u5982\u5728 Flutter \u7684 Widget \u6784\u9020\u51FD\u6570\u4E2D\u7684 onPressed \u4E4B\u7C7B\u7684\u573A\u5408\uFF09\u3002</p><p>\u4F60\u53EF\u4EE5\u901A\u8FC7\u7ED1\u5B9A\u4E00\u4E2A<strong>\u5916\u90E8\u89E3\u5305\u88C5\u51FD\u6570\u5B9A\u4E49</strong>\u6765\u5B9E\u73B0\u8FD9\u4E2A\u76EE\u7684\u3002\u5728\u811A\u672C\u4E2D\uFF0C\u5728\u51FD\u6570\u540D\u4E4B\u524D\u7684 <strong>[]</strong> \u7528\u6765\u5B9A\u4E49\u5916\u90E8\u89E3\u5305\u88C5\u51FD\u6570\u5B9A\u4E49\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>fun <span class="token punctuation">[</span><span class="token class-name">DartFunction</span><span class="token punctuation">]</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> num<span class="token punctuation">,</span> b<span class="token punctuation">:</span> num<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> num <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>

fun getFunc <span class="token punctuation">{</span>
  <span class="token keyword">return</span> add
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4F60\u53EF\u4EE5\u4F7F\u7528\u89E3\u91CA\u5668\u4E0A\u7684 <strong>bindExternalFunctionType()</strong> \u6765\u7ED1\u5B9A\u8FD9\u4E2A\u89E3\u5305\u88C5\u51FD\u6570\u3002\u5F53\u7136\u4E5F\u53EF\u4EE5\u76F4\u63A5\u5728\u89E3\u91CA\u5668\u521D\u59CB\u5316\u65F6\uFF0C\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 <strong>init()</strong> \u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u5982\u4F55\u5B9A\u4E49 <strong>DartFunction</strong> \u8FD9\u4E2A\u89E3\u5305\u88C5\u51FD\u6570\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>externalFunctions<span class="token punctuation">:</span> <span class="token punctuation">{</span>
  externalFunctionTypedef<span class="token punctuation">:</span> <span class="token punctuation">{</span>
  <span class="token string-literal"><span class="token string">&#39;DartFunction&#39;</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">HTFunction</span> function<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>int a<span class="token punctuation">,</span> int b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// must convert the return type here to let dart know its return value type.</span>
      <span class="token keyword">return</span> function<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">as</span> int<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E4B\u540E\uFF0C\u5F53\u4F60\u5728\u811A\u672C\u4E2D\u4F20\u9012 <strong>add</strong> \u51FD\u6570\u65F6\uFF0C\u5C31\u53EF\u4EE5\u83B7\u5F97\u4E00\u4E2A\u7B26\u5408\u5B9A\u4E49\u7684 Dart \u51FD\u6570\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\u3002\u6211\u4EEC\u5B9A\u4E49\u4E86\u53E6\u4E00\u4E2A Dart \u51FD\u6570\u3002\u5B83\u9700\u8981\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u4F20\u5165\u7684\u53C2\u6570\u3002\u6B64\u65F6\u6211\u4EEC\u5C31\u53EF\u4EE5\u5C06\u521A\u624D\u5728\u811A\u672C\u4E2D\u5B9A\u4E49\u7684 <strong>add</strong> \u51FD\u6570\u76F4\u63A5\u4F20\u7ED9\u4ED6\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">typedef</span> <span class="token class-name">DartFunction</span> <span class="token operator">=</span> int <span class="token class-name">Function</span><span class="token punctuation">(</span>int a<span class="token punctuation">,</span> int b<span class="token punctuation">)</span><span class="token punctuation">;</span>

int <span class="token function">hetuAdd</span><span class="token punctuation">(</span><span class="token class-name">DartFunction</span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> func <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;getFunc&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5BF9\u4E8E\u89E3\u5305\u88C5\u51FD\u6570\uFF0C\u6211\u4EEC\u901A\u5E38\u4F7F\u7528\u5982\u4E0B\u7684\u5B9A\u4E49\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">typedef</span> <span class="token class-name">HTExternalFunctionTypedef</span> <span class="token operator">=</span> <span class="token class-name">Function</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">HTFunction</span> hetuFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u81EA\u52A8\u7ED1\u5B9A\u5DE5\u5177" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u7ED1\u5B9A\u5DE5\u5177" aria-hidden="true">#</a> \u81EA\u52A8\u7ED1\u5B9A\u5DE5\u5177</h3><p><em>\u8FD9\u4E2A\u5DE5\u5177\u7684\u8D21\u732E\u8005\u76EE\u524D\u5F88\u4E45\u6CA1\u6709\u66F4\u65B0\u4E86\uFF0C\u5E76\u4E0D\u9002\u7528\u4E8E\u5F53\u524D\u7248\u672C\u7684\u6CB3\u56FE\u548C Flutter\u3002\u6211\u4EEC\u53EF\u80FD\u4F1A\u5728\u665A\u4E9B\u65F6\u5019\u66F4\u65B0\u5B83\u3002</em></p>`,22),D=s("\u611F\u8C22"),N={href:"https://github.com/rockingdice",target:"_blank",rel:"noopener noreferrer"},E=s("rockingdice"),C=s("\u7684\u8D21\u732E\uFF0C\u6211\u4EEC\u73B0\u5728\u6709\u4E00\u4E2A\u81EA\u52A8\u5316\u5DE5\u5177 "),M={href:"https://github.com/hetu-script/hetu-script-autobinding",target:"_blank",rel:"noopener noreferrer"},L=s("hetu-script-autobinding"),V=s(" \u7528\u6765\u751F\u6210\u4E00\u4E2A Dart \u7C7B\u7684\u5B8C\u6574\u5916\u90E8\u7C7B\u7ED1\u5B9A\u5B9A\u4E49\u3002");function j(B,G){const p=t("ExternalLinkIcon"),o=t("RouterLink");return c(),l(r,null,[b,n("ul",null,[m,n("li",null,[n("p",null,[d,n("a",g,[y,a(p)]),h,v,w])]),n("li",null,[n("p",null,[f,x,_,A,T,a(o,{to:"/zh-Hans/api_reference/dart/"},{default:u(()=>[H]),_:1}),P])]),F]),S,n("p",null,[D,n("a",N,[E,a(p)]),C,n("a",M,[L,a(p)]),V])],64)}var I=i(k,[["render",j]]);export{I as default};
