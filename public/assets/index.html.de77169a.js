import{r as a,o as s,c as o,a as t,b as c,w as r,F as p,d as i,e as n}from"./app.d4ded6d5.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const d={},u=i(`<h1 id="namespace" tabindex="-1"><a class="header-anchor" href="#namespace" aria-hidden="true">#</a> Namespace</h1><p>You can create a code block within a source or a function body, by declaring with keyword <strong>namespace</strong> and an Identifer as its name.</p><p>The namespace code block works like a class definition. It only allows for variable/class/function declaration, but not for expresssions.</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>namespace universe <span class="token punctuation">{</span>
  var meaning <span class="token operator">=</span> <span class="token number">42</span>
<span class="token punctuation">}</span>

<span class="token function">print</span><span class="token punctuation">(</span>universe<span class="token punctuation">.</span>meaning<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,4),m=n("Refer "),_=n("Do statement"),b=n(" for another kind of code block.");function f(k,h){const e=a("RouterLink");return s(),o(p,null,[u,t("p",null,[m,c(e,{to:"/docs/en-US/syntax/control_flow/#do"},{default:r(()=>[_]),_:1}),b])],64)}var x=l(d,[["render",f]]);export{x as default};
