"use strict";(self.webpackChunkhetu_docs=self.webpackChunkhetu_docs||[]).push([[851],{9342:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-647d364d",path:"/docs/en-US/installation/",title:"Installation",lang:"en-US",frontmatter:{title:"Installation"},excerpt:"",headers:[{level:2,title:"Flutter project",slug:"flutter-project",children:[]},{level:2,title:"File system and module import",slug:"file-system-and-module-import",children:[]}],filePathRelative:"docs/en-US/installation/README.md",git:{updatedTime:1639542855e3,contributors:[{name:"邵燃",email:"chengfubeiming@gmail.com",commits:1}]}}},5550:(n,s,a)=>{a.r(s),a.d(s,{default:()=>i});var e=a(6710);const t=(0,e.uE)('<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><p>Add the packages in your pubspec.yaml.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>\n  <span class="token key atrule">hetu_script</span><span class="token punctuation">:</span> ^0.3.2\n  <span class="token comment"># optional:</span>\n  <span class="token comment"># hetu_script_dev_tools: ^0.0.1</span>\n  <span class="token comment"># optional:</span>\n  <span class="token comment"># hetu_script_flutter: ^0.0.1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="flutter-project" tabindex="-1"><a class="header-anchor" href="#flutter-project" aria-hidden="true">#</a> Flutter project</h2><p>To load a script file from assets, add the script file&#39;s path into your pubspec.yaml like other assets. The default folder is &#39;scripts/&#39;,</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">assets</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> scripts/main.ht\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Those script will be pre-loaded by the new init method on Hetu class: <strong>initFlutter</strong>. You don&#39;t need to use old <strong>init</strong>. Also note that this is an async function.</p><p>Then you can load a asset script file by <strong>evalFile</strong> method:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">final</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">await</span> hetu<span class="token punctuation">.</span><span class="token function">initFlutter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">final</span> result <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">evalFile</span><span class="token punctuation">(</span><span class="token string">&#39;main.ht&#39;</span><span class="token punctuation">,</span> invokeFunc<span class="token punctuation">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="file-system-and-module-import" tabindex="-1"><a class="header-anchor" href="#file-system-and-module-import" aria-hidden="true">#</a> File system and module import</h2><p>To handle module import from physical disk within the script, there&#39;s another package called: &#39;hetu_script_dev_tools&#39;.</p><p>You have to use the class <strong>HTFileSystemSourceContext</strong> provided by this package, to replace the default one:</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string">&#39;package:hetu_script/hetu_script.dart&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;package:hetu_script_dev_tools/hetu_script_dev_tools.dart&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">final</span> sourceContext <span class="token operator">=</span> <span class="token class-name">HTFileSystemSourceContext</span><span class="token punctuation">(</span>root<span class="token punctuation">:</span> <span class="token string">&#39;../../script/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">final</span> hetu <span class="token operator">=</span> <span class="token class-name">Hetu</span><span class="token punctuation">(</span>sourceContext<span class="token punctuation">:</span> sourceContext<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  hetu<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">final</span> result <span class="token operator">=</span> hetu<span class="token punctuation">.</span><span class="token function">evalFile</span><span class="token punctuation">(</span><span class="token string">&#39;import_test1.ht&#39;</span><span class="token punctuation">,</span> invokeFunc<span class="token punctuation">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>content in &#39;import_test1.ht&#39;:</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">import</span> <span class="token string">&#39;hello.ht&#39;</span> <span class="token keyword">as</span> h\n\n<span class="token keyword">fun</span> main <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> h<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>content in &#39;hello.ht&#39;:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fun hello <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">&#39;Hello, world!&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',17),p=(0,e.Uk)("The 'hetu_script_dev_tools' package also provided a "),o=(0,e.Uk)("REPL tool"),l=(0,e.Uk)(" for quick testing."),c={},i=(0,a(8161).Z)(c,[["render",function(n,s){const a=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[p,(0,e.Wm)(a,{to:"/docs/en-US/command_line_tool/#REPL"},{default:(0,e.w5)((()=>[o])),_:1}),l])],64)}]])},8161:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);